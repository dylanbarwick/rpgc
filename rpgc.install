<?php

/**
 * @file
 * Install, update and uninstall functions for the rpgc module.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\Component\Serialization\Yaml;

/**
 * Implements hook_install().
 */
function rpgc_install() {

  $module_handler = \Drupal::service('module_handler');
  $module_path = $module_handler->getModule('rpgc')->getPath();
  $termfile = $module_path . '/config/system/rpgc-names--rpgc.yml';

  // If the file exists.
  if (file_exists($termfile)) {
    $terms = Yaml::decode(file_get_contents($termfile));
  }

  $terms_array = [];
  $originator = $terms['originator'];
  foreach ($terms['genre'] as $gkey => $gvalue) {
    $genre = $gkey;
    foreach ($gvalue['names']['races'] as $rkey => $rvalue) {
      foreach ($rvalue as $nkey => $nvalue) {
        $thisterm = [
          'vid' => 'rpgc_names',
          'name' => $nvalue['name'],
          'field_rpgcn_genre' => [$gkey],
          'field_rpgcn_originator' => [$originator],
          'field_rpgcn_race' => [$rkey],
        ];
        // Make the values safe.
        if (!empty($nvalue['field_rpgcn_culture'])) {
          $thisterm['field_rpgcn_culture'] = $nvalue['field_rpgcn_culture'];
        }
        if (!empty($nvalue['field_rpgcn_firstlast'])) {
          $thisterm['field_rpgcn_firstlast'] = $nvalue['field_rpgcn_firstlast'];
        }
        if (!empty($nvalue['field_rpgcn_malefemale'])) {
          $thisterm['field_rpgcn_malefemale'] = $nvalue['field_rpgcn_malefemale'];
        }
        $term_to_go = Term::create($thisterm);
        $term_to_go->save();
      }
    }
  }
}

/**
 * Implements hook_uninstall().
 *
 * All entities of type `rpgc` will be deleted, followed closely by
 * the entity type bundle itself. Scorched earth.
 */
function rpgc_uninstall() {
  $entity_type_manager = \Drupal::entityTypeManager();

  // Delete taxonomy terms in `dndbasic_names`.
  $tids = \Drupal::entityQuery('taxonomy_term')
    ->condition('vid', 'rpgc_names')
    ->execute();

  $controller = $entity_type_manager->getStorage('taxonomy_term');
  $entities = $controller->loadMultiple($tids);
  $controller->delete($entities);

  $vocab = Vocabulary::load('rpgc_names');
  if (!is_null($vocab)) {
    $vocab->delete();
  }
}
